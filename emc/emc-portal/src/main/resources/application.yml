server:
  port: 8085
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#  datasource:
#    url: jdbc:mysql://116.62.152.55:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
#    username: root
#    password: x244038sh
#    druid:
#      initial-size: 5 #连接池初始化大小
#      min-idle: 10 #最小空闲连接数
#      max-active: 20 #最大连接数
#      web-stat-filter:
#        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
#      stat-view-servlet: #访问监控网页的登录用户名和密码
#        login-username: druid
#        login-password: druid
  datasource:
    MyDb1:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://116.62.152.55:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: x244038sh
    MyDb2:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://47.242.165.233:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: FnewrR:*y:CV8zY
    druid:
      #最大活跃数
      maxActive: 20
      #初始化数量
      initialSize: 1
      #最大连接等待超时时间
      maxWait: 60000
      #打开PSCache，并且指定每个连接PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      #通过connectionProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 1 from dual
      validationQuery1: select 1
      # 注意 有的数据库不支持select 1 from dual 在配置处需要修改为下方的select 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
      filters: stat, wall, log4j
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
#  shardingsphere:
#    datasource:
#      names:
#        master,slave
#      # 主数据源
#      master:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://116.62.152.55:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
#        username: root
#        password: x244038sh
#      # 从数据源
#      slave:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://47.242.165.233:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
#        username: root
#        password: FnewrR:*y:CV8zY
#    masterslave:
#      # 读写分离配置
#      load-balance-algorithm-type: round_robin #轮询
#      # 最终的数据源名称
#      name: dataSource
#      # 主库数据源名称
#      master-data-source-name: master
#      # 从库数据源名称列表，多个逗号分隔
#      slave-data-source-names: slave
#    props:
#      sql:
#        show: true #开启SQL显示，默认false
  main:
    allow-bean-definition-overriding: true  #覆盖SpringBootConfiguration中的名为														dataSource 的bean，因为我们用的是														ShardingJDBC
  application:
    name: portal
#  kafka:
#    #    Kafka server 地址。多个用 , 隔开
#    bootstrap-servers: 192.168.248.130:9092
#    # 消费者配置
#    consumer:
#      # 消费者客户端Id
#      client-id: ${spring.application.name}-consumer
#      autoCommitInterval: 1000
#      # 当偏移量不存在时， 自动重置到最近的偏移
#      auto-offset-reset: latest
#      # 是否自动提交偏移量
#      enable-auto-commit: true
#      # key 序列化器
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      # value 序列化器
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      # 默认消费组Id
#      groupId: defaultConsumerGroup
#      properties:
#        # 消费请求超时时间
#        request:
#          timeout:
#            ms: 40000
#        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
#        session:
#          timeout:
#            ms: 40000
#        # 反序列化时，类型转换受信任的包
#        spring:
#          json:
#            trusted:
#              packages: '*'
#    # 生产者配置
#    producer:
#      # 生产这的客户端Id
#      client-id: ${spring.application.name}-producer
#      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
#      acks: 1
#      # 批量大小
#      batch-size: 16384
#      # 生产端缓冲区大小
#      buffer-memory: 33554432
#      # Kafka提供的序列化和反序列化类
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        # 提交延时
#        linger:
#          ms: 0
#      # 重试次数
#      retries: 0



  data:
    mongodb:
      host: 116.62.152.55
      port: 27017
      database: admin
      username: admin
      password: admin123456
  redis:
    host: 8.210.153.6 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password:  # Redis服务器连接密码（默认为空）
    timeout: 3000ms # 连接超时时间（毫秒）
  rabbitmq:
    host: 8.210.153.6
    port: 5672
    virtual-host: /mall
    username: admin
    password: admin123456
#mybatis:
#  mapper-locations:
#    - classpath:dao/*.xml
#    - classpath*:com/**/mapper/*.xml
mybatis-plus:
  # xml文件路径
  mapper-locations: dao/*.xml,com/**/mapper/*.xml
  # 实体类路径
  type-aliases-package: com.macro.emc
  configuration:
    # 驼峰转换
    map-underscore-to-camel-case: true
    # 是否开启缓存
    cache-enabled: false
    # 打印sql
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 全局配置
  global-config:
    # 数据库字段驼峰下划线转换
    db-column-underline: true
    # id自增类型(数据库id自增)
    id-type: 0
management: #开启SpringBoot Admin的监控
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

# 自定义redis key
redis:
  database: mall
  key:
    authCode: 'ums:authCode'
    orderId: 'oms:orderId'
    member: 'ums:member'
  expire:
    authCode: 90 # 验证码超期时间
    common: 86400 # 24小时

# 消息队列定义
#rabbitmq:
#  queue:
#    name:
#      cancelOrder: cancelOrderQueue
feign:
  okhttp:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 50000
        readTimeout: 50000
        loggerLevel: basic
## NameServer地址
#rocketmq.name-server: 192.168.131.171:9876
## 默认的消息组
#rocketmq.producer.group: springBootGroup
