
重构整体工作按三步
一、整个平台业务需求分析及整体业务边界需求
整个平台支持多品牌，多语言运作
1、登陆子系统 （单点登陆，多子系统支持验证）
构建全局的登陆中心，对会员及代理登陆账号进行注册，登陆令牌验证管理，支持手机号、邮箱注册。运维要求多支持多网关，分布式部署，要求app支持多线路登陆，并且支持登陆成功后系统可以推送新的线路，支持对特定账号指定线路返回。
2、平台核心功能系统
会员中心（会员基本信息、等级、会员画像标签管理）
代理中心（代理佣金体系）
报表中心（全部业务报表）
风控中心（风控业务逻辑需求）
日志中心（后台及核心操作日志跟踪）
配置中心（相关配置管理）
3、游戏子系统（三方游戏接入及管理）
4、支付子系统（三方支付、包含虚拟币支付接入及管理）
5、推广子系统（外接推广渠道管理及推广域名管理）
6、活动子系统（活动管理）
第一阶点： 重点需求分析与讨论，形成完整的业务需求文档，及业务流程、原型设计

二、重难点问题复盘及重难点问题解决方案
1、域名被墙解决方案
2、DDOS与CC攻击应对方案
3、高并发登陆应对方案
4、高并发下注应对方案
5、高并发充值提现应对方案
6、报表查询缓慢应对方案
7、接口响应缓慢应对方案
8、断线重联、数据请求异常及程序异常前端交互体验流程方案
9、前端数据缓存及后台数据变更通知刷新方案
10、服务端数据缓存策略方案
11、API接口支持分布式部署解决方案
12、数据库分库策略及数据库表设计解决方案
13、客户技术问题反馈收集方案
14、新旧系统同步运营方案，旧数据ETL到新库解决方案
第二阶段：重点问题与解决方案讨论。形成能落地的技术解决方案指导文档

三、整体技术框架及技术选型（微服、分布式部署，10万级高并发读写设计、核心复杂业务需解耦）
1、开发语言及开发框架选型
2、中间件选型（缓存，消息队列）
3、数据库选型（关系数据库、列数据库、内存数据库）
4、大数据处理技术框架选型（对数据的及时性进型分类）
5、安全性要求
6、运维及原代码及更新管理
7、代码审核机制（前端、APP、后端）代码审核。）
第三阶段：开发语言与开发框架技术选型讨论，形成最优方案。最终搭建开发框架
